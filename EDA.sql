-- Исследование БД / таблиц

----------------------------------------------------------------------------------
-- 1. Общая информация о таблце
----------------------------------------------------------------------------------
-- Выбрать список всех таблиц в БД
SELECT * FROM INFORMATION_SCHEMA.TABLES
WHERE table_schema = 'public'


-- Выбрать список ограничений
SELECT * FROM information_schema.table_constraints
WHERE constraint_schema = 'public' AND
	constraint_name LIKE 't_%';

-- Количество столбцов в таблице
SELECT COUNT(*)
  FROM INFORMATION_SCHEMA.COLUMNS
 WHERE table_schema = 'public' -- тут имя базы данных
   AND table_name = 'xp'
   
   
--Список названий столбцов в таблице с типом данных, 
--тип данных важно понимать для дальнейших операций:   

SELECT column_name, data_type 
FROM information_schema.columns
WHERE table_schema = 'public' AND table_name = 'xp'
ORDER BY ordinal_position ASC;


--Список ограничений 
SELECT * 
FROM information_schema.table_constraints 
WHERE table_name = 'table_name';


----------------------------------------------------------------------------------
--2. Проверка NULL и дубли
----------------------------------------------------------------------------------

--Вывести строки, где отсутствуют значения: 
... WHERE IS NULL 

--Посчитать все строки
COUNT (*)

--Посчитать ненулевые строки в столбце:
COUNT (column_name)

--Количество пропущенных значений в столбце:
SELECT count(*) - count(column_name) AS missing
FROM table_name


--Количество уникальных значений (NULL не в счет)
COUNT (DISTINCT column_name)

--Вывести все уникал значения в т.ч. NULL
SELECT DISTINCT column_name -

--Проверить есть ли дубли и их количество. Выбираем столбцы, по которым нужно проверить дубли. 
--Дулем считаются те строки, в которых все столбцы одинаковые. Значения в оставшихся столбцах не учитываются
SELECT col1, col2, col3, ...
FROM table_name
GROUP BY col1, col2, col3, ...
HAVING count(*) > 1

--Найти дублирующиеся строки
SELECT *
FROM (
		SELECT 
			col1, col2, col3, ...,
			ROW_NUMBER () OVER (PARTITION BY col1, col2, col3, ... ) - 1 AS duplicate
		FROM 	table_name
) dub
WHERE duplicate > 0 

----------------------------------------------------------------------------------
-- 3. Проверить на корректиность данных
----------------------------------------------------------------------------------
/*
Обнаружить, есть ли неверные значения у столбцов. 
Например, 
- цена с минусом
- запятая вместо точки
- не подходящий тип данных
- выбивающиеся из шаблона значения/ строки
- некорректные даты
*/

----------------------------------------------------------------------------------
-- 4. Несогласованные с бизнес-правилами значения в строках
----------------------------------------------------------------------------------

----------------------------------------------------------------------------------
-- 5 Выбросы в данных
----------------------------------------------------------------------------------
--Используем медианы, среднее
